pacman::p_load(haven, tidyverse, sjmisc, sjPlot)
data=read_sav("input/data/Ortega.sav")
frq(data$f7_3)
frq(data$f6)
frq(data$g1)
frq(data$edad)
names(data)
head(data)
sjPlot::view_df(data,
encoding = "UTF-8")
data_proc = data%>%
mutate(cuidarse = f7_3,
riesgo = f6,
trabaja =g1,
dummy_cuidarse = case_when(cuidarse<=2~0,
cuidarse>=3 & cuidarse<=5~1),
edad_tr = case_when(edad<=29 ~"Jovenes",
edad>=30 & edad<=59 ~"Adultos",
edad>=60 ~"Adultos mayores"), #Tramos de edad según caracteristicas de la poblacion INE
riesgo_cod = case_when(riesgo==1~"Nada peligroso",
riesgo==2~"Algo peligroso",
riesgo==3~"Bastante peligroso",
riesgo==4~"Muy peligroso",
riesgo==5~"Extremadamente peligroso",
TRUE~NA_character_),
trabaja_cod = case_when(g1==1~"Si", g1==2~"No", TRUE~NA_character_))%>%
mutate_at(vars(cuidarse, riesgo), ~(car::recode(., recodes = c("c(8, 9) = NA"))))%>%
select(entrevistado, factor_expansion, edad, edad_tr, cuidarse, dummy_cuidarse,
riesgo, riesgo_cod, trabaja, trabaja_cod)
frq(data_proc$cuidarse)
frq(data_proc$dummy_cuidarse)
frq(data_proc$edad)
frq(data_proc$edad_tr)
frq(data_proc$riesgo)
frq(data_proc$riesgo_cod)
frq(data_proc$trabaja)
frq(data_proc$trabaja_cod)
view_df(data_proc)
saveRDS(data_proc, file = "output/data/datos_proc.rds")
pacman::p_load(haven, tidyverse, sjmisc, sjPlot, srvyr, survey)
data_proc=readRDS("output/data/datos_proc.rds")
modelo0 <- lm(cuidarse ~ riesgo ,
data = data_proc,
weights = factor_expansion)
summary(modelo0)
sjPlot::tab_model(modelo0,
show.ci=FALSE,
encoding = "UTF-8")
sjPlot::plot_model(modelo0,
show.p = T,
show.values =  T,
ci.lvl = c(0.95),
title = "Modelo0",
vline.color = "cyan")
modelo1 = glm(cuidarse ~ riesgo + trabaja + edad_tr,
family = gaussian(link = "identity"),
data = data_proc,
weights = factor_expansion)
summary(modelo1)
modelo2 = glm(cuidarse ~ riesgo_cod + trabaja + edad_tr,
family = gaussian(link = "identity"),
data = data_proc,
weights = factor_expansion)
summary(modelo2)
sjPlot::tab_model(list(modelo1, modelo2),
show.ci=FALSE,
p.style = "stars",
dv.labels = c("Modelo 1", "Modelo 2"),
string.pred = "Predictores", string.est = "β",
encoding =  "UTF-8")
sjPlot::plot_model(modelo2,
show.p = T,
digits = 3,
show.values =  T,
ci.lvl = c(0.95),
title = "Modelo2",
vline.color = "black")
modelonulo_sin <- lm(dummy_cuidarse ~ 1,
data = data_proc)
summary(modelonulo_sin)
#Con ponderador
modelonulo_con <- lm(dummy_cuidarse ~ 1,
data = data_proc,
weights = factor_expansion)
summary(modelonulo_con)
summary(modelo0);summary(modelo0_sin)
modelo3 = glm(dummy_cuidarse ~ edad,
family = gaussian(link = "identity"),
data = data_proc,
weights = factor_expansion)
summary(modelo3)
modelo4 = glm(dummy_cuidarse ~ trabaja,
family = gaussian(link = "identity"),
data = data_proc,
weights = factor_expansion)
summary(modelo4)
modelo5 = glm(dummy_cuidarse ~ edad + trabaja,
family = gaussian(link = "identity"),
data = data_proc,
weights = factor_expansion)
summary(modelo5)
modelo6 = glm(dummy_cuidarse ~ riesgo_cod,
family = gaussian(link = "identity"),
data = data_proc,
weights = factor_expansion)
summary(modelo6)
sjPlot::tab_model(list(modelonulo_con, modelonulo_sin, modelo3, modelo4, modelo5, modelo6),
show.ci=FALSE,
digits = 3,
p.style = "stars",
dv.labels = c("Modelo Nulo_con", "Modelo Nulo_sin", "Modelo 3", "Modelo 4", "Modelo 5", "Modelo 6"),
string.pred = "Predictores", string.est = "β",
encoding =  "UTF-8")
modelo6_pred = get_model_data(modelo6,
type = "pred")
sjPlot::tab_model(list(modelo6, modelo3),
show.ci=FALSE,
p.style = "stars",
dv.labels = c("Modelo 6", "Modelo 3"),
string.pred = "Predictores", string.est = "β",
encoding =  "UTF-8")
esi_design <- as_survey_design(data_proc,
ids = 1,
weights = factor_expansion)
modelo6_survey <- svyglm(dummy_cuidarse ~ riesgo_cod,
family = gaussian(link = "identity"),
design = esi_design)
summary(modelo6_survey)
sjPlot::tab_model(list(modelo6, modelo6_survey),
show.ci=FALSE,
p.style = "stars",
dv.labels = c("Modelo 6", "Modelo 6 Survey"),
string.pred = "Predictores", string.est = "β",
encoding =  "UTF-8")
sjPlot::plot_models(modelo6, modelo6_survey,
show.p = T,
show.values =  T,
ci.lvl = c(0.95),
title = "Modelo6/survey",
vline.color = "black")
print <- broom::augment(modelo0)
print1 <- broom::augment(modelo1)
print2 <- broom::augment(modelo2)
print3 <- broom::augment(modelo3)
print4 <- broom::augment(modelo4)
print5 <- broom::augment(modelo5)
print6 <- broom::augment(modelo6)
print7 <- broom::augment(modelo6_survey)
print8 <- broom::augment(modelonulo_con)
print9 <- broom::augment(modelonulo_sin)
save(print, print1, print2, print3, print4, print5, print6, print7,
print8, print9, file = "output/data/Modelos.RData")
summary(modelo0);summary(modelo0_sin)
summary(modelonulo_con);summary(modelonulo_sin)
